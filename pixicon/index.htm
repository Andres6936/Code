<script src=pixicon.js></script>
<style>
* {font: 14px Segoe UI,Trebuchet MS,Tahoma,sans-serif}
body {background:#36393E;text-align:center;padding-top:64px}
div#p {width: 617px;margin-right:3px}
div#p2 {width: 277px}
div#u, div#uu {
    margin:0px;
    box-shadow: 2px 2px 20px #232427;
    border-radius: 4px;
    padding: 8px;
    display: inline-flex;
    background: #5B616A;
}
div#u2{
    margin:0px;
    box-shadow: 2px 2px 20px #232427;
    border-radius: 0 0 4px 4px;
    padding: 16px;
    background: #FBF5F5;
    width: 640px;
    margin:auto;
}
input,button {
    text-shadow: 0.6px 0.6px 0px #FFF;
    border-radius: 2px;
    margin: 3px;
    padding: 2px;
    outline: none;
    width: 612px;
    color: #555;
    text-align: center;
    border: none;
    background: #F2EDED;
    margin-top: 4px;
    height: 32px;
    box-shadow: 1px 1px 3px #232427;
}

input {width:273px}
input:hover,button:hover {background:#D0D2D7}
button:active,input:focus{background:#C7C9CF;}
button:active{cursor:pointer;}
canvas {
    border-radius: 2px;box-shadow: 1px 1px 3px #232427;
    background: #FBF5F5;
    margin: 2px;
    padding: 3px;
    border: 1px solid #EAEAEA;
    transition: opacity .25s ease-in-out;
    widtha:24px;heighta:24px;

}
hr{border:0;border-bottom:1px solid #AAA;margin:8px;padding:0;}
em{font-style:italic;}
* {transition: opacity .25s ease-in-out;}
canvas#q{padding:10.5px 9px;width:253px; height:253px;} /* multiples of 8 only! */
.info b{font:bold 32px consolas;margin-bottom:4px;}
.info {text-align:left;}
a{color:crimson}
</style>
<div>
<div id=u>
    <div id=p><div id=o></div><button>Generate more</button></div>
    <div id=p2><canvas id=q width=256 height=256></canvas><input type=text placeholder='Type something here'></div>
</div>
</div>
<div class=info id=u2><b>pixicon</b> by <a target="_blank" href="http://github.com/bryc">@bryc</a><br>
    An experimental hashicon generator. Designed to produce highly identifable icons with as many different results as possible. It is a WIP, still looking into better pattern/color generation methods and different shapes. Click <a href=?pixels>here</a> if you like pixels more than triangles.
    <hr>
    To give you an idea of how many <em>base patterns</em> there are: in 11x11 grid, there are (2<sup>5</sup> x 6<sup>10</sup> x 2<sup>6</sup>) in diagonal symmetry mode or (6<sup>25</sup> x 2<sup>6</sup>) in fully random mode. So combined: 123,834,728,448 + 1,819,538,433,915,500,888,064 possible base patterns. Not bad! 
    <br><br>
    This however doesn't take into account color information, layering, or alternate symmetry modes which probably increase these numbers exponentially.
</ul>
</div>



<script>
    var pixi = document.location.search ? true : false;


    function arst(a){return a.trim?Array.apply(0,Array(a.length)).map(function(x,i){return a[i].charCodeAt()}):String.fromCharCode.apply(0,a)}

var cyrb32 = function(data) {
    var i, tmp, sum = 0x9CB85729, len = data.length;
    for(i = 0; i < len; i++) {
        sum = sum + data[i];
        sum = sum + (sum << ((sum & 7)+1));
    } 
    for(tmp = sum >>> 0; tmp > 0; tmp >>>= 1) {
        if(tmp & 1) sum = sum + (sum << ((sum & 7)+1)) + tmp;
    }
    return sum >>> 0;
};

function more() {
    
    
    for(var i=0;i<cnt;i++) {
        var str = Math.random().toString(36).substr(2,7)+Math.random().toString(36).substr(2,7)
        cnv[i].title=str;pixicon(cnv[i],4, cyrb32(arst(str)) ,pixi);
    }
}

pixicon(document.querySelector("canvas#q"),23,cyrb32(arst("a")),pixi);
document.querySelector("input").oninput = function() {
    pixicon(document.querySelector("canvas#q"), 23, cyrb32(arst(this.value)),pixi);
};
document.querySelector("input").onfocus = function() {
    clearInterval(wat);
};
document.querySelector("canvas#q").onclick = function() {
    clearInterval(wat);
};
var wat;

function startThing() {
    wat = setInterval(function(){
        var str = Math.random().toString(36).substr(2,7)+Math.random().toString(36).substr(2,7)
        console.log(str)
        pixicon(document.querySelector("canvas#q"), 23, cyrb32(arst(str)),pixi);
        document.querySelector("input").value = str;
    },500)
}

startThing();
for(var cnt = 55, cnv = [], i = 0; i < cnt; i++) {
    var c = document.createElement("canvas");
    cnv.push(c);
    document.querySelector("div#o").appendChild(c);
    if(i===cnt-1) more(), document.querySelector("button").onclick=more;
}
</script>